*** Begin Patch
*** Add File: web/src/app/api/cron/auto-news/route.ts
+import { NextRequest, NextResponse } from 'next/server';
+import { createClient } from '@libsql/client';
+import { PostsRepository } from '@/lib/db/posts-repository';
+import { fetchYouTubeChannelRSS, fetchYouTubeVideos } from '@/lib/feed/youtube';
+
+export const runtime = 'nodejs';
+export const dynamic = 'force-dynamic';
+
+function verifyCronRequest(request: NextRequest): boolean {
+  const authHeader = request.headers.get('authorization');
+  if (authHeader === `Bearer ${process.env.CRON_SECRET}`) return true;
+  if (process.env.NODE_ENV === 'development') return true;
+  return false;
+}
+
+type PrefChannel = { name: string; channelId?: string };
+
+const PREF_CHANNELS: PrefChannel[] = [
+  { name: '高橋洋一チャンネル', channelId: 'UC6ag81wMs4pnJjLuSJDzuVA' },
+  { name: '文化人放送局' },
+  { name: '山口敬之チャンネル', channelId: 'UCpAjmHTwvOQq1_wachYdnwg' },
+  { name: '真相深入り！虎ノ門ニュース', channelId: 'UCHk5mAXPuNWTXBaU0mSvhGg' },
+];
+
+async function resolveChannelIdIfNeeded(ch: PrefChannel): Promise<string | undefined> {
+  if (ch.channelId) return ch.channelId;
+  const apiKey = process.env.YOUTUBE_API_KEY || '';
+  if (!apiKey) return undefined;
+  try {
+    const res = await fetchYouTubeVideos(apiKey, undefined, ch.name, 1);
+    const vid = res?.[0];
+    return vid?.channelId;
+  } catch { return undefined; }
+}
+
+export async function GET(req: NextRequest){
+  if (!verifyCronRequest(req)) return NextResponse.json({ ok:false, error:'unauthorized' }, { status:401 });
+  const db = createClient({ url: process.env.TURSO_DB_URL || 'file:local.db', authToken: process.env.TURSO_AUTH_TOKEN });
+  const postsRepo = new PostsRepository();
+
+  try {
+    const hourAgoIso = new Date(Date.now() - 60*60*1000).toISOString();
+    const recent = await db.execute({ sql: `SELECT id FROM posts WHERE owner_key = 'ADMIN_OPERATOR' AND url LIKE '%youtube.com%' AND created_at > ? LIMIT 1`, args: [hourAgoIso] });
+    if (recent.rows.length > 0) return NextResponse.json({ ok:true, skipped:'rate_limit' });
+  } catch {}
+
+  for (const ch of PREF_CHANNELS) {
+    const cid = await resolveChannelIdIfNeeded(ch);
+    if (!cid) continue;
+    const videos = await fetchYouTubeChannelRSS(cid);
+    for (const v of videos) {
+      const watchUrl = `https://www.youtube.com/watch?v=${v.id}`;
+      const exists = await db.execute({ sql: `SELECT id FROM posts WHERE url = ? OR url = ? LIMIT 1`, args: [watchUrl, `https://youtu.be/${v.id}`] });
+      if (exists.rows.length > 0) continue;
+      try {
+        await postsRepo.createPost({
+          title: v.title,
+          url: watchUrl,
+          comment: undefined,
+          handle: '@運営',
+          ownerKey: 'ADMIN_OPERATOR',
+          tags: ['動画','ニュース'],
+          media: undefined,
+        });
+        return NextResponse.json({ ok:true, posted: { channel: ch.name, title: v.title, url: watchUrl } });
+      } catch (e:any) {
+        return NextResponse.json({ ok:false, error:String(e?.message||e) }, { status:500 });
+      }
+    }
+  }
+
+  return NextResponse.json({ ok:true, posted: null, reason: 'no_new_video' });
+}
+
*** End Patch
